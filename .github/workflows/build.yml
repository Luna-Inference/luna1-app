name: Build Flutter App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_macos:
    name: Build Flutter (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.24.0' # Specify Flutter version for consistency
          cache: true
      - name: Create .env file
        run: |
          echo "TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}" > .env
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
        working-directory: ./v1
      - run: flutter pub get
        working-directory: ./v1
      - run: flutter build macos
        working-directory: ./v1
      - name: Install create-dmg
        run: npm install --global create-dmg
      - name: Create DMG
        run: |
          # Get app name from pubspec.yaml
          APP_NAME=$(grep '^name:' pubspec.yaml | cut -d ' ' -f 2)
          APP_VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
          
          # Create DMG using create-dmg
          create-dmg \
            --volname "${APP_NAME} ${APP_VERSION}" \
            --volicon "build/macos/Build/Products/Release/${APP_NAME}.app/Contents/Resources/AppIcon.icns" \
            --window-pos 200 120 \
            --window-size 600 300 \
            --icon-size 100 \
            --icon "${APP_NAME}.app" 175 120 \
            --hide-extension "${APP_NAME}.app" \
            --app-drop-link 425 120 \
            "${APP_NAME}-${APP_VERSION}.dmg" \
            "build/macos/Build/Products/Release/${APP_NAME}.app"
        working-directory: ./v1
      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: v1/*.dmg
          retention-days: 30
      - name: Upload macOS Build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: v1/build/macos/Build/Products/Release/

  build_windows:
    name: Build Flutter (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Create .env file
        run: |
          echo "TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}" > .env
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
        working-directory: ./v1
      - run: flutter pub get
        working-directory: ./v1
      - run: flutter build windows
        working-directory: ./v1
      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: v1/build/windows/x64/runner/Release/

  build_web:
    name: Build Flutter (Web)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Create .env file
        run: |
          echo "TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}" > .env
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
        working-directory: ./v1
      - run: flutter pub get
        working-directory: ./v1
      - run: flutter build web
        working-directory: ./v1
      - name: Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: v1/build/web/
